import Category from './Category';
import Division from './Division';
import Organizer from './Organizer';
import TournamentTeam from './TournamentTeam';
import Venue from './Venue';

type Tournament = {
  assistRecorded: boolean;
  blockedShotRecorded: boolean;
  categories: Category[];
  champions: TournamentTeam[];
  description: string;
  divisions: Division[];
  endDate: string;
  extraTeamDetails: boolean;
  freeThrowAttemptRecorded: boolean;
  gameSplitTemplate: string;
  hasRoundRobinGames: boolean;
  id: number;
  logo: string;
  logoFileName: string;
  minuteRecorded: boolean;
  name: string;
  organizer: Organizer;
  pendingApprovalTeamsCount: number;
  personalFoulRecorded: boolean;
  prize: number;
  reboundingTemplate: string;
  registeredTeamsCount: number;
  registrationDeadline: string;
  registrationFee: number;
  registrationOpen: boolean;
  registrationType: string;
  registrationsAcceptedCount: { [key: number]: number };
  registrationsAcceptedCountTotal: number;
  registrationsPendingCount: { [key: number]: number };
  registrationsPendingCountTotal: number;
  regulation: number;
  scoringTemplate: string;
  sport: string;
  startDate: string;
  stealRecorded: boolean;
  teamFormat: number;
  teamPlayersDateOfBirthRequired: boolean;
  teamPlayersDocumentationRequired: boolean;
  teamPlayersPositionRequired: boolean;
  teamWaiverRequired: boolean;
  technicalFoulRecorded: boolean;
  threePointAttemptRecorded: boolean;
  tournamentTeams?: TournamentTeam[];
  turnoverRecorded: boolean;
  twoPointAttemptRecorded: boolean;
  venues: Venue[];

  waiver?: string;
  waiverPath?: string;
};

export default Tournament;
